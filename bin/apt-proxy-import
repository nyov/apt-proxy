#!/usr/bin/env python
#
# Copyright (C) 2002 Manuel Estrada Sainz <ranty@debian.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

from twisted.python import usage
import sys, pwd, os

class MyOptions(usage.Options):
    optFlags = [
        ['version', 'V', 'print version and quit'],
        ['verbose', 'v', 'give verbose output'],
        ['quiet', 'q', "try not to write messages to stdout"],
        ['help', 'h'],
        ]
    optParameters = [
        ['import-dir', 'i', None, "Directory to import .deb's from"],
        ['user', 'u', 'aptproxy', "Change to this username."],
        ['debug', 'd', 0, "debug level"],
        ]
    longdesc="apt-proxy-import imports .deb files into the apt-proxy cache."

    def __init__(self):
        usage.Options.__init__(self)

try:
    config = MyOptions()
    config.parseOptions()
except usage.UsageError, ue:
    print '%s: %s' % (sys.argv[0], ue)

if config.opts['version']:
    print "apt-proxy-import 1.9.x"
    sys.exit(0)

should_be_uid = pwd.getpwnam(config.opts['user'])[2]
if os.getuid() != should_be_uid:
    try:
        os.setuid(should_be_uid)
    except OSError:
        print "Error, couldn't change to user %s."%config.opts['user']
        sys.exit(1)

from apt_proxy.apt_proxy_conf import factoryConfig
from apt_proxy import packages

class DummyFactory:
    "This is just to get the configuration data somewhere."
    def debug(self, msg):
        print msg
        
factory = DummyFactory()
factoryConfig(factory)

if config.opts['debug']:
    print 'debug'
if config.opts['verbose']:
    print "verbose"
    factory.do_debug=1

if factory.do_debug and not config.opts['quiet']:
    from apt_proxy.misc import log
    log.addDomains(factory.debug)
    log.addDomains( {'all': config.opts['debug']} )

import_dir = config.opts['import-dir']

if not import_dir:
    import_dir = factory.import_dir
packages.import_debs(factory, import_dir)
